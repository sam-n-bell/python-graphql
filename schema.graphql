# schema defines what types of operations clients can perform
schema {
    query: Query
    mutation: Mutation
}

# similar idea as OpenAPI
type Post {
    id: ID!
    title: String!
    description: String!
    created_at: String!
}

# similar idea as OpenAPI
type PostResult {
    success: Boolean!
    errors: [String]
    post: Post
}

# similar idea as OpenAPI
type PostsResult {
    success: Boolean!
    errors: [String]
    posts: [Post]
}

# defines query operations our clients can perform
type Query {
    listPosts: PostsResult!
    getPost(id: ID!): PostResult!
}
# ! means mandatory
type Mutation {
    createPost(title: String!, description: String!, created_at: String): PostResult!
    updatePost(id: ID!, title: String, description: String): PostResult
    deletePost(id: ID!): PostResult
}